from graph import graph
from state import user_states


async def run_graph(message_text: str, user_id: int):
    print('–ó–∞–ø—É—Å—Ç–∏–ª–∏ –≥—Ä–∞—Ñ')
    if user_id not in user_states:
        user_states[user_id] = {
            "message": message_text,
            "history": [f"üßë: {message_text}"],
            "offer_type": None,
            "final_price": None,
            "final_format": None,
            "agreed": False,
            "rejected": False,
            "price_drop_count": 0  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ 0 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω—ã
        }
    else:
        user_states[user_id]["message"] = message_text
        user_states[user_id]["history"].append(f"üßë: {message_text}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≥—Ä–∞—Ñ
    result = graph.invoke(user_states[user_id])

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞)
    user_states[user_id].update(result)

    # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–∫–∞–∑, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    if result.get("–†–µ—à–µ–Ω–∏–µ"):
        user_states.pop(user_id)  # –æ—á–∏—â–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

        if result["–†–µ—à–µ–Ω–∏–µ"] == "–°–æ–≥–ª–∞—Å–µ–Ω":
            return f"""
üéâ –ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —Å —É—Å–ø–µ—Ö–æ–º!
- –†–µ—à–µ–Ω–∏–µ: {result['–†–µ—à–µ–Ω–∏–µ']}
- –§–æ—Ä–º–∞—Ç: {result['–§–æ—Ä–º–∞—Ç']}
- –°—Ç–æ–∏–º–æ—Å—Ç—å: {result['–°—Ç–æ–∏–º–æ—Å—Ç—å']}
            """.strip()

        if result["–†–µ—à–µ–Ω–∏–µ"] == "–û—Ç–∫–∞–∑":
            return f"""
‚ùå –ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —Å –æ—Ç–∫–∞–∑–æ–º.
- –†–µ—à–µ–Ω–∏–µ: {result['–†–µ—à–µ–Ω–∏–µ']}
- –ü—Ä–∏—á–∏–Ω–∞: {result['–ü—Ä–∏—á–∏–Ω–∞']}
            """.strip()

    # –ï—Å–ª–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç—Å—è ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞
    return result.get("message", "ü§ñ –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
